package life.genny.rules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import io.vertx.core.json.JsonObject;
import life.genny.utils.OutputParam;
import org.apache.commons.lang3.StringUtils;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.message.QDataBaseEntityMessage;


rule "AGREE_TO_MENTOR_CLICK_EVENT"
    ruleflow-group 'EventProcessing'
		salience 2
    no-loop
    when
		$message : QEventMessage(data.code matches "ACT_MENTOR_AGREE_TO_MENTOR.*")
		userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam( )
 		ruleDetails : RuleDetails()
    then

		System.out.println(drools.getRule().getName() + " - Rule fired");

		/* QUE_FINISH_MENTOR */

		String code = $message.getData().getCode();
		System.out.println("code: " +code);

		String key = StringUtils.removeStart(code, "QUE_MENTOR_AGREE_TO_MENTOR_GRP");
		System.out.println("key: " +key);

		String user = userToken.getUserCode();
		System.out.println("user: " + user);

        /* Set userToken and serviceToken */
        /*output.setUserToken(userToken);
        output.setServiceToken(serviceToken);*/

        /* Set result */
        output.setTypeOfResult("SIGNAL");
		output.setResultCode("START_MENTOR_AGREE");

		output.setSuitCase(key);
		output.setAskSourceCode(user);
		/* targetCode is the BaseEntity we want to finish */
		output.setTargetCode(user);


		System.out.println("**************************************************");
		System.out.println("TypeOfResult: "  + output.getTypeOfResult());
		System.out.println("ResultCode: "    + output.getResultCode());
		System.out.println("SuitCase: "      + output.getSuitCase());
		System.out.println("AskSourceCode: " + output.getAskSourceCode());
		System.out.println("TargetCode: "    + output.getTargetCode());
		System.out.println("**************************************************");
		
		/* Sending matched mentee detail to FE */
		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);
		BaseEntity mentorBe = beUtils.quantumBe(user, "mentorBe");
		
		String applicationCode = mentorBe.getValue("PRI_LNK_APP_CODE", null);
		
		if (applicationCode != null)
		{
				BaseEntity applicationBe = beUtils.quantumBe(applicationCode, "applicationBe");
				String menteeCode = applicationBe.getValue("PRI_MENTEE_CODE", null);
				
				if (menteeCode != null)
				{
					BaseEntity menteeBe = beUtils.quantumBe(menteeCode, "menteeBe");
					QDataBaseEntityMessge matchedMentee = new QDataBaseEntityMessage(menteeBe);
					matchedMentee.setToken(userToken.getToken());
					matchedMentee.setReplace(true);
					VertxUtils.writeMsg("webcmds", JsonUtils.toJson(matchedMentee));
				}				
		}
		retract($message);
	end
