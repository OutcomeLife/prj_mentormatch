/*package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.GennySettings;
import java.util.UUID;
import life.genny.notifications.EmailHelper;

import java.util.List;
import java.util.ArrayList;

rule "IS_MENTEE"
    ruleflow-group 'IsBaseEntity'
    no-loop true
    salience 1000
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		output : OutputParam()
		baseEntityType : String(baseEntityType.equals("INTERN"))
		newBe : BaseEntity()

     then
 		System.out.println("IS_MENTEE: Rule fired" );
 		System.out.println("IS_MENTEE: newBe = " + newBe.getCode());

 	/*  Construct answer with Source, Target, Attribute Code, Value */
 	/*	BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_IS_MENTEE", "true"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS", "OFF SHORE"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_DISABLED", "false"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_STATUS_COLOR", "#5cb85c"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_NUM_JOURNALS", "0"));
 		beUtils.saveAnswer(new Answer(userToken.getUserCode(), newBe.getCode() ,"PRI_PROFILE", "Complete"));


		newBe = beUtils.getBaseEntityByCode(newBe.getCode());

		/* Set up in Keycloak */


	/*	BaseEntity user = beUtils.getBaseEntityByCode(newBe.getCode());
		String userStr = newBe.getCode();
		String[] userSplit = userStr.split("_");
		String userCode = userSplit[1];
		System.out.println("User "+user+" with userCode = "+userCode);

		String userId = "";

		String firstname = user.getValue("PRI_FIRSTNAME",null);
		if (firstname != null) {
			String lastname = user.getValue("PRI_LASTNAME",null);
			if (lastname != null) {
				String email = user.getValue("PRI_EMAIL",null);
				if (email != null) {
					/*String userPassword = UUID.randomUUID().toString().substring(0,10);*/
					/* TODO HACK */
	/*				if (true) {
						String userPassword = "Password1";
						userId = KeycloakUtils.updateUser(userCode,serviceToken.getToken(), serviceToken.getRealm(), email, firstname, lastname,  email, userPassword,"user", "users");
						userId = userId.toUpperCase();
						Answer keycloakId = new Answer(beUtils.getGennyToken().getUserCode(),newBe.getCode(),"PRI_UUID",userId);
						beUtils.saveAnswer(keycloakId);
						System.out.println("Created User "+email+" in Keycloak with id = "+userId + " and password:" +userPassword);
					} else {
					     System.out.println("KEYCLOAK USER CREATION DISABLED IN RULE IS_MENTEE");
					}
				}
			}
		}



		String endPoint = GennySettings.projectUrl + "/v7/notes";
		/*String endPoint = "https://internmatch-cyrus.gada.io/v7/notes";*/

	/*	String tag = "ni";

		QwandaUtils.apiPostNote(endPoint, userToken.getUserCode(), tag, userToken.getUserCode(), "Added an Mentee: " + firstname, serviceToken.getToken());

		System.out.println("I just posted the note");
		System.out.println("Note endPoint: " +endPoint);
		System.out.println("Note userToken.getUserCode(): " +userToken.getUserCode());

		BaseEntity menteeBe = beUtils.getBaseEntityByCode(newBe.getCode());

		if(menteeBe != null){

			QDataBaseEntityMessage menteeBeMsg = new QDataBaseEntityMessage(menteeBe);
			menteeBeMsg.setToken(userToken.getToken());
			VertxUtils.writeMsg("webcmds", JsonUtils.toJson(menteeBeMsg));
		}


		output.setTypeOfResult("NONE");
		output.setResultCode("NONE");  /* dont display anything new */

	/*	retract(newBe)

end
*/