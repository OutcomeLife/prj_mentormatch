package life.genny.rules;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.models.GennyToken;
import life.genny.rules.QRules;
import life.genny.utils.BaseEntityUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.OutputParam;
import java.util.List;
import java.util.ArrayList;

import io.vertx.core.json.JsonObject;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.models.GennyToken;
import life.genny.utils.VertxUtils;
import life.genny.utils.OutputParam;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.utils.BaseEntityUtils;
import life.genny.utils.QuestionUtils;
import life.genny.qwandautils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.BucketUtils;
import life.genny.utils.TableUtils;
import life.genny.models.ThemePosition;
import life.genny.models.ThemeAttributeType;
import life.genny.qwandautils.GennySettings;

rule "SET_PRI_STATUS_AS_MATCHED"
    ruleflow-group 'Movement'
    no-loop true
    salience 1
    when
	 	userToken : GennyToken (code != "PER_SERVICE" )
		serviceToken : GennyToken (code == "PER_SERVICE" )
		newApplication : BaseEntity( code matches "APP_\\S+" )
		output : OutputParam()
		bucketCode : String(bucketCode.equals("TRAINING"))
		controlSignalCode : String(controlSignalCode.equals("MATCH"))
		associatedMenteeBe : BaseEntity( code matches "PER_\\S+" )


     then
 		System.out.println("SET_PRI_STATUS_AS_MATCHED: Rule fired" );

		BaseEntityUtils beUtils = new BaseEntityUtils(serviceToken, userToken);

		/* Refresh the BaseEntity because mysterious reasons told to me by Chris... */
 		newApplication = beUtils.getBaseEntityByCode(newApplication.getCode());
 		associatedMenteeBe = beUtils.getBaseEntityByCode(associatedMenteeBe.getCode());

 		Answer answer = new Answer(userToken.getUserCode(), newApplication.getCode(),"PRI_STATUS","MATCHED");
 		beUtils.saveAnswer(answer);


		System.out.println("SET_PRI_STATUS_AS_MATCHED: Answer = " + answer);
		System.out.println("SET_PRI_STATUS_AS_MATCHED: newApplication = " + newApplication);

		/* Save status to the PER */
		String appMentee = associatedMenteeBe.getCode();
		System.out.println("appMentee = " + appMentee);

		if (appMentee != null) {
 				beUtils.saveAnswer(new Answer(userToken.getUserCode(), newApplication.getCode(), "PRI_MENTEE_CODE", appMentee));
		} else {
			System.out.println("ERROR: Null appMentee");
		}

		String assocMentee = newApplication.getValue("PRI_MENTEE_CODE", null);
		System.out.println("assocMentee: " +assocMentee);

		if (associatedMenteeBe != null) {

			String firstname = associatedMenteeBe.getValue("PRI_FIRSTNAME", null);
 			String lastname = associatedMenteeBe.getValue("PRI_LASTNAME", null);
 			String name = "";

			System.out.println("firstname = " +firstname);
			System.out.println("lastname = " +lastname);

			if (firstname != null) {
				if (lastname != null) {
						name = firstname + " " + lastname;
						System.out.println("name = " +name);

						if (name != null) {

								answer = new Answer(userToken.getUserCode(), newApplication.getCode(), "PRI_MENTEE_NAME", name);
								beUtils.saveAnswer(answer);

								answer = new Answer(userToken.getUserCode(), newApplication.getCode(), "PRI_NAME", name);
								beUtils.saveAnswer(answer);
						} else {
							System.out.println("ERROR: Null name");
						}
				} else {
					System.out.println("ERROR: Null lastname");
				}
			} else {
				System.out.println("ERROR: Null firstname");
			}

			System.out.println("## Removing from Training Bucket ##");

			/* Remove from Training bucket */
			Answer answerDisable = new Answer(userToken.getUserCode(), associatedMenteeBe.getCode(), "PRI_DISABLED", true);
			beUtils.saveAnswer(answerDisable);
			System.out.println("answerDisable: " +answerDisable);

			TableUtils.moveEntity(associatedMenteeBe.getCode(), "SBE_MENTEE_TRAINING", "SBE_MATCHED", beUtils);

		} else {

			System.out.println("associatedMenteeBe is NULL");
		}

		retract(newApplication)
		retract(bucketCode)
		retract(controlSignalCode)
		retract(associatedMenteeBe)
end
